{"version":3,"sources":["Demo/Faculty/CourseContent/AddVideoLecture.js"],"names":["AddVideoLecture","props","componentDidMount","a","user","id","match","params","setState","class_id","createNotification","type","value","NotificationManager","info","success","warning","error","onDropPhoto","files","isValid","text","state","isLoading","deletedRowId","showModal","handleCloseModal","name","description","data","filesProgress","event","this","e","preventDefault","trim","length","that","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","FormData","append","axios","post","configs","prod","then","response","history","push","catch","err","console","log","status","msg","filePreview","map","file","key","controls","style","maxWidth","maxHeight","src","URL","createObjectURL","Header","Title","as","Body","className","onSubmit","handleSubmit","disabled","Row","md","span","offset","Group","controlId","Label","Control","placeholder","onFocus","onChange","handleTextChange","target","rows","onDrop","accept","minSize","maxSize","multiple","getRootProps","getInputProps","isDragActive","isDragReject","rejectedFiles","isFileTooLarge","size","display","alignItems","justifyContent","borderWidth","height","borderRadius","textAlign","borderColor","borderStyle","backgroundColor","color","onClick","stopPropagation","width","position","padding","Text","marginTop","variant","React","Component","connect","userDetails"],"mappings":"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","file":"static/js/54.8325ac0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport axios from 'axios';\r\nimport configs from '../../../config';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Loader from '../../../App/layout/Loader';\r\nimport { connect } from 'react-redux';\r\nimport Dropzone from 'react-dropzone';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nclass AddVideoLecture extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDropPhoto = (files) => {\r\n            this.setState({ files: files, isValid: { value: true, text: '' } });\r\n        };\r\n        this.state = {\r\n            isLoading: false,\r\n\t\t\tdeletedRowId: null,\r\n\t\t\tshowModal: false,\r\n\t\t\thandleCloseModal: false,\r\n            name: \"\",\r\n            description: \"\",\r\n            class_id: \"\",\r\n            isValid: {\r\n                value: false,\r\n                text: ''   \r\n            },\r\n            data: [],\r\n            files: [],\r\n            filesProgress: 0,\r\n        }\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        this.setState({ [event.name]: event.value });\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n       if (this.props && this.props.user && this.props.user.id && this.props.match && this.props.match.params && this.props.match.params.id) {\r\n            await this.setState({ class_id: this.props.match.params.id })\r\n        }\r\n    }\r\n    \r\n\r\n    createNotification = (type, value) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(value,'', 5000);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(value, '', 5000);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(value, '', 5000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(value, '', 5000);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    \r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        const { name, files, description, class_id  } = this.state;\r\n\r\n        if (!name && name.trim().length <= 0) {\r\n            this.setState({ isValid: { value: true, text: 'Please enter valid Lecture Name', name: 'name' }});\r\n            return;\r\n        }\r\n\r\n        if (!description && description.trim().length <= 0) {\r\n            this.setState({ isValid: { value: true, text: 'Please enter valid Lecture Description', name: 'description' }});\r\n            return;\r\n        }\r\n\r\n        if (!files.length) {\r\n            this.setState({ isValid: { value: true, text: 'Please drop Lecture Video above', name: 'files' }});\r\n            return;\r\n        }\r\n        \r\n        await this.setState({ filesProgress: 0 });\r\n        let that = this;\r\n        const config = {\r\n            onUploadProgress: function(progressEvent) {\r\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                that.setState({ filesProgress: percentCompleted });\r\n            }\r\n        }\r\n        \r\n        let data = new FormData()\r\n        data.append('files', files[0]);\r\n        data.append('name', name.trim());\r\n        data.append('description', description.trim());\r\n        data.append('class_id', class_id);\r\n        \r\n        axios.post(`${configs.prod}/api/class/lecture/create`, data, config)\r\n            .then(response => {\r\n                this.props.history.push(`/faculty/class/list`);\r\n            })\r\n            .catch(err => {\r\n                console.log('Error: ', err.response);\r\n                if (err.response && err.response.status && (err.response.status === 400 || err.response.status === 500)) {\r\n                    if (err.response.status === 500 && err.response.data.error.name === 'SequelizeUniqueConstraintError') {\r\n                        this.setState({ filesProgress: 0, isValid: { value: true, text: 'Lecture with this name already exist', name:'server_error' } });\r\n                    } else {\r\n                        this.setState({ filesProgress: 0, isValid: { value: true, text: err.response.data.msg, name:'server_error' } });\r\n                    }\r\n                } else {\r\n                    this.setState({ filesProgress: 0, isValid: { value: true, text: 'Unknown Error', name:'server_error' } });\r\n                    //this.createNotification('error', 'Unknown Error');\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const filePreview = this.state.files.map(file => (\r\n            <video key={file.name} controls style={{ maxWidth: '100%', maxHeight: '100%' }}>\r\n                <source src={URL.createObjectURL(file)} />\r\n                Sorry, your browser doesn't support embedded videos.\r\n            </video>\r\n        ));\r\n        const maxSize = 104857600 * 10;\r\n        return (\r\n            <Aux>\r\n                {this.state.isLoading && <Loader />}\r\n\t\t\t\t<Row>\r\n                    <NotificationContainer/>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Add Video Lecture</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Form className=\"col-md-12\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                                        <fieldset disabled={this.state.isLoading} className={this.state.isLoading ? 'opacity-5' : ''}>\r\n                                            <Form.Row>\r\n                                                <Col md={{ span: 8, offset: 2 }}>\r\n                                                    <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                                        <Form.Label>Lecture Name</Form.Label>\r\n                                                        <Form.Control \r\n                                                            type=\"text\" \r\n                                                            name=\"name\" \r\n                                                            placeholder=\"Lecture Name\" \r\n                                                            value={this.state.name}\r\n                                                            className={this.state.isValid.value && this.state.isValid.name === 'name' ? 'in-valid-input' : ''}\r\n                                                            onFocus={() => this.setState({ isValid: { value: false, text: ''}})}\r\n                                                            onChange={(e) => this.handleTextChange(e.target) }\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                            <Form.Row>\r\n                                                <Col md={{ span: 8, offset: 2 }}>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Lecture Description</Form.Label>\r\n                                                        <Form.Control \r\n                                                            as=\"textarea\" \r\n                                                            name='description'\r\n                                                            rows={3}\r\n                                                            value={this.state.description}\r\n                                                            className={this.state.isValid.value && this.state.isValid.name === 'description' ? 'in-valid-input' : ''}\r\n                                                            onFocus={() => this.setState({ isValid: { value: false, text: ''}})}\r\n                                                            onChange={(e) => this.handleTextChange(e.target) }\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                            <Form.Row>\r\n                                                <Col md={{ span: 8, offset: 2 }}>\r\n                                                    <Dropzone \r\n                                                        onDrop={this.onDropPhoto} \r\n                                                        accept=\"video/*\" \r\n                                                        minSize={0}\r\n                                                        maxSize={maxSize}\r\n                                                        multiple={false}\r\n                                                    >\r\n                                                        {({getRootProps, getInputProps, isDragActive, isDragReject, rejectedFiles}) => {\r\n                                                            const isFileTooLarge = rejectedFiles && rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize;\r\n                                                            return (\r\n                                                                <section>\r\n                                                                    <div style={{ display: 'flex', alignItems: 'center', justifyContent:'center', borderWidth: 2, height: '25em', borderRadius: 2, textAlign: 'center', borderColor: '#eeeeee', borderStyle: 'dashed', backgroundColor: '#fafafa', color: '#bdbdbd' }} \r\n                                                                    {...getRootProps({className: 'dropzone',\r\n                                                                        onClick: event => event.stopPropagation()\r\n                                                                    })}>\r\n                                                                        <input {...getInputProps()} />\r\n                                                                        {!isDragActive && !filePreview.length && 'Drop a lecutre video to upload!'}\r\n                                                                        {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\r\n                                                                        {isDragReject && \"File type not accepted, sorry!\"}\r\n                                                                        {isFileTooLarge && (\r\n                                                                            <div className=\"text-danger mt-2\">\r\n                                                                              File is too large. Max Size 1GB\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                        { filePreview }\r\n                                                                        { filePreview.length ? <div style={{ width: '15%', position: 'absolute', padding: 14, backgroundColor: 'whitesmoke', borderRadius: 20 }}>\r\n                                                                            <CircularProgressbar value={this.state.filesProgress} text={`${this.state.filesProgress}%`} /> \r\n                                                                            </div> : null \r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    {\r\n                                                                        this.state.isValid.value && this.state.isValid.name === 'files' ?\r\n                                                                        <Form.Text style={{ color: 'red' }}>\r\n                                                                            { this.state.isValid.text }\r\n                                                                        </Form.Text> : ''\r\n                                                                    }\r\n                                                                </section>\r\n                                                            )}\r\n                                                        }\r\n                                                    </Dropzone>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                            <Form.Row>\r\n                                                <Col md={{ span: 8, offset: 2 }}>\r\n                                                    <div>\r\n                                                        <Button type=\"submit\" style={{ marginTop: '1.8rem', width: '100%' }} variant={\"primary\"}>\r\n                                                            { 'Submit' }\r\n                                                        </Button>\r\n                                                        {\r\n                                                            this.state.isValid.value ?\r\n                                                            <Form.Text style={{ color: 'red' }}>\r\n                                                                { this.state.isValid.text }\r\n                                                            </Form.Text> : ''\r\n                                                        }\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                        </fieldset>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userDetails.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(AddVideoLecture);\r\n"],"sourceRoot":""}