{"version":3,"sources":["Demo/Admin/students/students.js"],"names":["Students","props","createNotification","type","value","NotificationManager","info","success","warning","error","state","isLoading","deletedRowId","showModal","handleCloseModal","isValid","text","data","columns","Header","accessor","Cell","row","className","variant","onClick","openDeleteModal","original","this","setState","name","isEdit","status","id","axios","delete","config","prod","user_id","then","response","getStudentsList","catch","err","console","log","get","show","onHide","closeButton","Title","Body","Footer","handleDelete","cancelDelete","as","style","background","color","noDataText","minRows","minWidth","loading","loadingText","defaultSorted","desc","showFilters","React","Component"],"mappings":"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","file":"static/js/46.0b5e9507.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button, Modal } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport ReactTable from 'react-table';\r\nimport axios from 'axios';\r\nimport 'react-table/react-table.css';\r\nimport config from '../../../config';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Loader from '../../../App/layout/Loader';\r\n\r\nclass Students extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n\t\t\tdeletedRowId: null,\r\n\t\t\tshowModal: false,\r\n\t\t\thandleCloseModal: false,\r\n            isValid: {\r\n                value: false,\r\n                text: ''   \r\n            },\r\n            data: [],\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'First Name',\r\n\t\t\t\t\taccessor: 'first_name',\r\n                    Cell: row => <p className=\"cell-custom\">{ row.value }</p>\r\n                }, \r\n                {\r\n\t\t\t\t\tHeader: 'Last Name',\r\n\t\t\t\t\taccessor: 'last_name',\r\n                    Cell: row => <p className=\"cell-custom\">{ row.value }</p>\r\n                },\r\n                {\r\n\t\t\t\t\tHeader: 'Email',\r\n\t\t\t\t\taccessor: 'email',\r\n                    Cell: row => <p className=\"cell-custom\">{ row.value }</p>\r\n                },\r\n                {\r\n\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\taccessor: 'status',\r\n                    Cell: row => <p className=\"cell-custom\">{ row.value ? 'true' : 'false' }</p>\r\n                },\r\n                {\r\n\t\t\t\t\tHeader: 'ID',\r\n\t\t\t\t\taccessor: 'u_id',\r\n                    Cell: row => <p className=\"cell-custom\">{ row.value }</p>\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                        <div className=\"action-btn cell-custom\">\r\n                            <Button  variant=\"danger\" onClick={() => this.openDeleteModal(row.original)}>Delete</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n\t\t\t],\r\n        }\r\n    }\r\n\r\n    handleTextChange(value) {\r\n        this.setState({ name: value });\r\n    }\r\n   \r\n    openDeleteModal(value) {\r\n\t\tthis.setState({ isEdit: false, name: value.name, status: true, showModal: true, deletedRowId: value.id });\r\n    }\r\n    \r\n\tcloseDeleteModal() {\r\n\t\tthis.setState({ showModal: false });\r\n    }\r\n    \r\n    handleDelete() {\r\n        this.setState({ showModal: false, isLoading: true });\r\n\t\taxios.delete(`${config.prod}/api/interest/delete`, { data: { user_id: this.state.deletedRowId } })\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.createNotification('success', 'Interest Deleted Successfully');\r\n\t\t\t\tthis.getStudentsList();\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t\tconsole.log('Error: deleting data from db ', err.response);\r\n                this.createNotification('error', 'Error while deleting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getStudentsList();\r\n    }\r\n    \r\n    getStudentsList() {\r\n        this.setState({ isLoading: true });\r\n\t\taxios.get(`${config.prod}/api/user/user/list`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({ data: response.data.data, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error: getting data from db ', err.response);\r\n                this.createNotification('error', 'Error while Getting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n    createNotification = (type, value) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(value,'', 5000);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(value, '', 5000);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(value, '', 5000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(value, '', 5000);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    \r\n    cancelDelete() {\r\n\t\tthis.setState({ \r\n            isEdit: false,\r\n            showModal: false,\r\n\t\t\tname: ''\r\n\t\t});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                {this.state.isLoading && <Loader />}\r\n\t\t\t\t{this.state.showModal && \r\n\t\t\t\t\t<Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Confirm</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Are you sure to want to delete</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={() => this.handleDelete()}>\r\n                                OK\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={() => this.cancelDelete()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\t\t\t\t}\r\n                <Row>\r\n                    <NotificationContainer/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Students List</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ReactTable \r\n                                            style={{ background: '#3f4d67', color: '#d3d5db' }}\r\n                                            data={this.state.data}\r\n                                            columns={this.state.columns}\r\n                                            noDataText={\"No Record Found.\"}\r\n                                            minRows={10}\r\n                                            minWidth={1500}\r\n                                            loading={this.props.loading || false }\r\n                                            loadingText={'Loading...'}\r\n                                            defaultSorted={this.props.defaultSorted || [{ id: null, desc: true}]}\r\n                                            showFilters={true}\r\n                                            className='react-table -striped -highlight'\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Students;\r\n"],"sourceRoot":""}