{"version":3,"sources":["Demo/Admin/interests/interests.js"],"names":["moment","require","Interests","props","createNotification","type","value","NotificationManager","info","success","warning","error","state","isLoading","deletedRowId","showModal","handleCloseModal","name","isValid","text","data","columns","Header","accessor","Cell","row","className","format","variant","onClick","openDeleteModal","original","this","setState","isEdit","status","id","axios","delete","config","prod","interest_id","then","response","getInterestList","catch","err","console","log","get","e","preventDefault","trim","length","post","msg","show","onHide","closeButton","Title","Body","Footer","handleDelete","cancelDelete","as","onSubmit","handleSubmit","disabled","Row","md","lg","Group","controlId","Label","Control","placeholder","onFocus","onChange","handleTextChange","target","Text","style","color","marginTop","background","noDataText","minRows","minWidth","loading","loadingText","defaultSorted","desc","showFilters","React","Component"],"mappings":"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","file":"static/js/45.53645e7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Form, Button, Modal } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport ReactTable from 'react-table';\r\nimport axios from 'axios';\r\nimport 'react-table/react-table.css';\r\nimport config from '../../../config';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Loader from '../../../App/layout/Loader';\r\nvar moment = require('moment');\r\n\r\nclass Interests extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n\t\t\tdeletedRowId: null,\r\n\t\t\tshowModal: false,\r\n\t\t\thandleCloseModal: false,\r\n            name: \"\",\r\n            isValid: {\r\n                value: false,\r\n                text: ''   \r\n            },\r\n            data: [],\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Date Time',\r\n\t\t\t\t\taccessor: 'updatedAt',\r\n                    Cell: row => <p className=\"cell-custom\">{ moment(row.value).format('MM/DD/YYYY HH:mm:ss') }</p>\r\n\t\t\t\t}, \r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Name',\r\n\t\t\t\t\taccessor: 'name',\r\n                    Cell: row => <p className=\"cell-custom\">{ row.value }</p>\r\n\t\t\t\t}, \r\n\t\t\t\t{\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                        <div className=\"action-btn cell-custom\">\r\n                            <Button  variant=\"danger\" onClick={() => this.openDeleteModal(row.original)}>Delete</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n\t\t\t],\r\n        }\r\n    }\r\n\r\n    handleTextChange(value) {\r\n        this.setState({ name: value });\r\n    }\r\n\r\n   \r\n    openDeleteModal(value) {\r\n\t\tthis.setState({ isEdit: false, name: value.name, status: true, showModal: true, deletedRowId: value.id });\r\n    }\r\n    \r\n\tcloseDeleteModal() {\r\n\t\tthis.setState({ showModal: false });\r\n    }\r\n    \r\n    handleDelete() {\r\n        this.setState({ showModal: false, isLoading: true });\r\n\t\taxios.delete(`${config.prod}/api/interest/delete`, { data: { interest_id: this.state.deletedRowId } })\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.createNotification('success', 'Interest Deleted Successfully');\r\n\t\t\t\tthis.getInterestList();\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t\tconsole.log('Error: deleting data from db ', err.response);\r\n                this.createNotification('error', 'Error while deleting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getInterestList();\r\n    }\r\n    \r\n    getInterestList() {\r\n        this.setState({ isLoading: true });\r\n\t\taxios.get(`${config.prod}/api/interest/list`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({ data: response.data.data, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error: getting data from db ', err.response);\r\n                this.createNotification('error', 'Error while Getting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n    createNotification = (type, value) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(value,'', 5000);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(value, '', 5000);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(value, '', 5000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(value, '', 5000);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    \r\n    cancelDelete() {\r\n\t\tthis.setState({ \r\n            isEdit: false,\r\n            showModal: false,\r\n\t\t\tname: ''\r\n\t\t});\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let { name } = this.state;\r\n        \r\n        if (!name && name.trim().length === 0) {\r\n            this.setState({ isValid: { value: true, text: 'Please enter valid Interest Name' } });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n        axios.post(`${config.prod}/api/interest/create`, { name: name.trim() })\r\n            .then(response => {\r\n                this.setState({ name: '', isLoading: false });\r\n                this.createNotification('success', 'Interest Created Successfully');\r\n                this.getInterestList();\r\n            })\r\n            .catch(err => {\r\n                console.log('Error: ', err.response);\r\n                this.setState({ isLoading: false });\r\n                if (err.response && err.response.status && (err.response.status === 409 || err.response.status === 400 || err.response.status === 500)) {\r\n                    this.setState({ isValid: { value: true, text: err.response.data.msg } });\r\n                    this.createNotification('error', err.response.data.msg);\r\n                } else {\r\n                    this.setState({ isValid: { value: true, text: 'Unknown Error' } });\r\n                    this.createNotification('error', 'Unknown Error');\r\n                }\r\n            });\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                {this.state.isLoading && <Loader />}\r\n\t\t\t\t{this.state.showModal && \r\n\t\t\t\t\t<Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Confirm</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Are you sure to want to delete <b>{this.state.name}</b> </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={() => this.handleDelete()}>\r\n                                OK\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={() => this.cancelDelete()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\t\t\t\t}\r\n                <Row>\r\n                    <NotificationContainer/>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Create Interest</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Form className=\"col-md-12\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                                        <fieldset disabled={this.state.isLoading} className={this.state.isLoading ? 'opacity-5' : ''}>\r\n                                            <Form.Row>\r\n                                                <Col md={6} lg={7}>\r\n                                                    <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                                        <Form.Label>Interest Name</Form.Label>\r\n                                                        <Form.Control \r\n                                                            type=\"text\" \r\n                                                            name=\"name\" \r\n                                                            placeholder=\"Interest Name\" \r\n                                                            value={this.state.name}\r\n                                                            className={this.state.isValid.value ? 'in-valid-input' : ''}\r\n                                                            onFocus={() => this.setState({ isValid: { value: false, text: ''}})}\r\n                                                            onChange={(e) => this.handleTextChange(e.target.value) }\r\n                                                        />\r\n                                                        {\r\n                                                            this.state.isValid.value ?\r\n                                                            <Form.Text style={{ color: 'red' }}>\r\n                                                                { this.state.isValid.text }\r\n                                                            </Form.Text> : ''\r\n                                                        }\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col md={6} lg={4}>\r\n                                                    <div>\r\n                                                        <Button type=\"submit\" style={{ marginTop: '1.8rem' }} variant={\"primary\"}>\r\n                                                            { 'Submit' }\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                        </fieldset>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Interest List</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ReactTable \r\n                                            style={{ background: '#3f4d67', color: '#d3d5db' }}\r\n                                            data={this.state.data}\r\n                                            columns={this.state.columns}\r\n                                            noDataText={\"No Record Found.\"}\r\n                                            minRows={10}\r\n                                            minWidth={1500}\r\n                                            loading={this.props.loading || false }\r\n                                            loadingText={'Loading...'}\r\n                                            defaultSorted={this.props.defaultSorted || [{ id: null, desc: true}]}\r\n                                            showFilters={true}\r\n                                            className='react-table -striped -highlight'\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Interests;\r\n"],"sourceRoot":""}