{"version":3,"sources":["Demo/Users/Interests/Interests.js"],"names":["Interests","props","createNotification","type","value","NotificationManager","info","success","warning","error","addInterest","e","elem","a","preventDefault","state","ownData","length","some","x","interest_id","id","setState","isLoading","axios","post","config","prod","user_id","user","then","response","getInterestList","catch","err","console","log","alert","deletedRowId","showModal","handleCloseModal","isValid","text","data","dataToAdd","dataToDelete","this","status","delete","promiseArray","push","get","Promise","all","isEdit","name","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","handleDelete","cancelDelete","disabled","className","as","map","openDeleteModal","key","interest","React","Component","connect","userDetails"],"mappings":"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","file":"static/js/61.3e3a0e16.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button, Modal } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport axios from 'axios';\r\nimport config from '../../../config';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Loader from '../../../App/layout/Loader';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Interests extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n\t\t\tdeletedRowId: null,\r\n\t\t\tshowModal: false,\r\n\t\t\thandleCloseModal: false,\r\n            isValid: {\r\n                value: false,\r\n                text: ''   \r\n            },\r\n            data: [],\r\n            ownData: [],\r\n            dataToAdd: [],\r\n            dataToDelete: [],\r\n        }\r\n    }\r\n\r\n    openDeleteModal(value) {\r\n\t\tthis.setState({ status: true, showModal: true, deletedRowId: value.id });\r\n    }\r\n    \r\n\tcloseDeleteModal() {\r\n\t\tthis.setState({ showModal: false });\r\n    }\r\n    \r\n    handleDelete() {\r\n        this.setState({ showModal: false, isLoading: true });\r\n\t\taxios.delete(`${config.prod}/api/user/interest/delete`, { data: { interest_id: this.state.deletedRowId } })\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.createNotification('success', 'Interest Deleted Successfully');\r\n\t\t\t\tthis.getInterestList();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error: deleting data from db ', err.response);\r\n                this.createNotification('error', 'Error while deleting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getInterestList();\r\n    }\r\n    \r\n    getInterestList() {\r\n        this.setState({ isLoading: true });\r\n        let promiseArray = [];\r\n        promiseArray.push(axios.get(`${config.prod}/api/interest/list`));\r\n        promiseArray.push(axios.get(`${config.prod}/api/interest/${this.props.user.id}/list`));\r\n\t\tPromise.all(promiseArray)\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({ data: response[0].data.data, ownData:response[1].data.data, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error: getting data from db ', err.response);\r\n                this.createNotification('error', 'Error while Getting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n    createNotification = (type, value) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(value,'', 5000);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(value, '', 5000);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(value, '', 5000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(value, '', 5000);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    \r\n    cancelDelete() {\r\n\t\tthis.setState({ \r\n            isEdit: false,\r\n            showModal: false,\r\n\t\t\tname: ''\r\n\t\t});\r\n    }\r\n    \r\n    addInterest = async (e, elem) => {\r\n        e.preventDefault();\r\n        let length = this.state.ownData.length; \r\n        if (length < 3) {\r\n            if (!this.state.ownData.some(x => x.interest_id === elem.id)) {\r\n                await this.setState({ isLoading: true });\r\n                axios.post(`${config.prod}/api/user/interest/create`, { user_id: this.props.user.id, interest_id: elem.id })\r\n                    .then(response => {\r\n                        this.getInterestList();\r\n                    })\r\n                    .catch(err => {\r\n                        this.setState({ isLoading: false });\r\n                        console.log('Error: adding data into db ', err.response);\r\n                        this.createNotification('error', 'Error while adding interest into db');\r\n                    });\r\n            } else {\r\n                alert('Interest already Added.');    \r\n            }\r\n        } else {\r\n            alert('Max interest length reached.');\r\n        }\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                {this.state.isLoading && <Loader />}\r\n\t\t\t\t{this.state.showModal && \r\n\t\t\t\t\t<Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Confirm</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Are you sure to want to delete?</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={() => this.handleDelete()}>\r\n                                OK\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={() => this.cancelDelete()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\t\t\t\t}\r\n                 <fieldset disabled={this.state.isLoading} className={this.state.isLoading ? 'opacity-5' : ''}>\r\n                    <Row>\r\n                        <NotificationContainer/>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h5\">Your Interests</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        {\r\n                                            this.state.ownData.map((elem) => (\r\n                                                <Button variant=\"outline-success\" onClick={ () => this.openDeleteModal(elem) } key={elem.id} className=\"mr-2 mt-2\">{ elem.interest.name }</Button>\r\n                                            ))\r\n                                        }\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h5\">Interest List</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            {\r\n                                                this.state.data.map(elem => (\r\n                                                    <Button variant=\"outline-warning\" key={elem.id} onClick={(e) => this.addInterest(e, elem) } className=\"mr-2 mt-2\">{ elem.name }</Button>\r\n                                                ))\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </fieldset>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userDetails.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Interests);\r\n"],"sourceRoot":""}