{"version":3,"sources":["Demo/Faculty/Classes/Classes.js"],"names":["Classes","props","createNotification","type","value","NotificationManager","info","success","warning","error","state","isLoading","deletedRowId","showModal","handleCloseModal","isValid","text","data","this","history","push","id","setState","isEdit","name","status","axios","delete","config","prod","class_id","then","response","getClassesList","catch","err","console","log","user","get","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","handleDelete","cancelDelete","as","map","elem","key","description","listStudentsEnrolled","className","listVideoLecture","addVideoLecture","addTopic","listTopics","addAnnoucement","listAnnoucement","addAssignment","listAssignment","addQuiz","listQuiz","addCourseMaterial","listCourseMaterial","React","Component","connect","userDetails"],"mappings":"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","file":"static/js/51.37a0940c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button, Modal } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport axios from 'axios';\r\nimport config from '../../../config';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Loader from '../../../App/layout/Loader';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Classes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n\t\t\tdeletedRowId: null,\r\n\t\t\tshowModal: false,\r\n\t\t\thandleCloseModal: false,\r\n            isValid: {\r\n                value: false,\r\n                text: ''   \r\n            },\r\n            data: []\r\n        }\r\n    }\r\n\r\n\r\n    addVideoLecture(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/course/create`)\r\n    }\r\n\r\n    addTopic(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/topic/create`)\r\n    }\r\n\r\n    listTopics(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/topic/list`)\r\n    }\r\n    \r\n    addQuiz(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/quiz/create`)\r\n    }\r\n\r\n    listQuiz(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/quiz/list`)\r\n    }\r\n\r\n    addAnnoucement(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/annoucement/create`)\r\n    }\r\n\r\n    listAnnoucement(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/annoucement/list`)\r\n    }\r\n\r\n    addAssignment(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/assignment/create`)\r\n    }\r\n\r\n    listAssignment(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/assignment/list`)\r\n    }\r\n    \r\n    addCourseMaterial(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/course/material/create`)\r\n    }\r\n   \r\n    listCourseMaterial(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/course/material/list`)\r\n    }\r\n\r\n    listVideoLecture(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/course/list`)\r\n    }\r\n\r\n    listStudentsEnrolled(value) {\r\n        this.props.history.push(`/faculty/class/${value.id}/students/list`)\r\n    }\r\n    \r\n    openDeleteModal(value) {\r\n\t\tthis.setState({ isEdit: false, name: value.name, status: true, showModal: true, deletedRowId: value.id });\r\n    }\r\n    \r\n\tcloseDeleteModal() {\r\n\t\tthis.setState({ showModal: false });\r\n    }\r\n    \r\n    handleDelete() {\r\n        this.setState({ showModal: false, isLoading: true });\r\n\t\taxios.delete(`${config.prod}/api/class/delete`, { data: { class_id: this.state.deletedRowId } })\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.createNotification('success', 'Class Deleted Successfully');\r\n\t\t\t\tthis.getClassesList();\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t\tconsole.log('Error: deleting data from db ', err.response);\r\n                this.createNotification('error', 'Error while deleting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.user && this.props.user.id) {\r\n            this.getClassesList();\r\n        }\r\n    }\r\n    \r\n    getClassesList() {\r\n        this.setState({ isLoading: true });\r\n\t\taxios.get(`${config.prod}/api/class/${this.props.user.id}/list`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({ data: response.data.data, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error: getting data from db ', err.response);\r\n                this.createNotification('error', 'Error while Getting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n    createNotification = (type, value) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(value,'', 5000);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(value, '', 5000);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(value, '', 5000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(value, '', 5000);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    cancelDelete() {\r\n\t\tthis.setState({ \r\n            isEdit: false,\r\n            showModal: false,\r\n\t\t\tname: ''\r\n\t\t});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Aux>\r\n                {this.state.isLoading && <Loader />}\r\n\t\t\t\t{this.state.showModal && \r\n\t\t\t\t\t<Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Confirm</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Are you sure to want to delete <b>{this.state.name}</b> </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={() => this.handleDelete()}>\r\n                                OK\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={() => this.cancelDelete()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\t\t\t\t}\r\n                <Row>\r\n                    <NotificationContainer/>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Classes List</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        {\r\n                                            this.state.data.map(elem => (\r\n                                                <Col key={elem.id}>\r\n                                                    <Card>\r\n                                                        <Card.Header>{elem.name}</Card.Header>\r\n                                                        <Card.Body>\r\n                                                            <div>\r\n                                                                <p>\r\n                                                                    {elem.description}\r\n                                                                </p>\r\n                                                                <hr />\r\n                                                            </div>\r\n                                                            <Button onClick={() => this.listStudentsEnrolled(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\"> View Students Enrolled </Button>\r\n                                                            <Button onClick={() => this.listVideoLecture(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\"> View Lectures List </Button>\r\n                                                            <Button onClick={() => this.addVideoLecture(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\"> Add Lecture </Button>\r\n                                                            <Button onClick={() => this.addTopic(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">Add Topic</Button>\r\n                                                            <Button onClick={() => this.listTopics(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">List Topic</Button>\r\n                                                            <Button onClick={() => this.addAnnoucement(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">Add Annoucement</Button>\r\n                                                            <Button onClick={() => this.listAnnoucement(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">List Annoucement</Button>\r\n                                                            <Button onClick={() => this.addAssignment(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">Add Assignment</Button>\r\n                                                            <Button onClick={() => this.listAssignment(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">List Assignment</Button>\r\n                                                            <Button onClick={() => this.addQuiz(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">Add Quiz</Button>\r\n                                                            <Button onClick={() => this.listQuiz(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">List Quiz</Button>\r\n                                                            <Button onClick={() => this.addCourseMaterial(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">Add Course Material</Button>\r\n                                                            <Button onClick={() => this.listCourseMaterial(elem)} variant=\"outline-primary\" className=\"mr-2 mt-2\">List Course Material</Button>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            ))\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userDetails.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Classes);\r\n"],"sourceRoot":""}