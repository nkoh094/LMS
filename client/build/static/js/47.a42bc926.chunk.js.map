{"version":3,"sources":["Demo/Authentication/verify/verfiyIdentity.js"],"names":["VerifyIdentity","props","createNotification","type","value","NotificationManager","info","success","warning","error","handleSubmit","e","a","preventDefault","state","u_id","status","trim","length","setState","isValid","text","name","u_idTrim","checkAlphabet","checkDigit","charAt","test","substr","isLoading","axios","post","config","prod","id","user","role","then","response","localStorage","setItem","data","token","signIn","history","push","catch","err","console","log","msg","this","Header","Title","as","Body","Text","className","onSubmit","disabled","Row","md","lg","Group","controlId","Label","Control","placeholder","onFocus","onChange","handleTextChange","target","style","color","Check","inline","custom","checked","label","padding","variant","React","Component","connect","userDetails","actions"],"mappings":"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","file":"static/js/47.a42bc926.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Loader from '../../../App/layout/Loader';\r\nimport axios from 'axios';\r\nimport config from '../../../config';\r\nimport * as actions from \"../../../store/actions/userActions\";\r\n\r\nclass VerifyIdentity extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            u_id: '',\r\n            status: true,\r\n            isValid: {\r\n                value: false,\r\n                text: '',\r\n                name: ''   \r\n            },\r\n\t    }\r\n    }\r\n\r\n    handleTextChange(value) {\r\n        this.setState({ u_id: value });\r\n    }\r\n\r\n    createNotification = (type, value) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(value,'', 5000);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(value, '', 5000);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(value, '', 5000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(value, '', 5000);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n    \r\n    handleSubmit= async (e) => {\r\n        e.preventDefault();\r\n       \r\n        const { u_id, status } = this.state;\r\n        \r\n        if (!u_id || u_id.trim().length === 0) {\r\n            this.setState({ isValid: { value: true, text: 'Please enter valid Student/Faculty ID', name: 'u_id' } });\r\n            return;\r\n        }\r\n        let u_idTrim = u_id.trim();\r\n        let checkAlphabet = /^[A-Z]/;\r\n        let checkDigit = /^\\d+$/;\r\n        if (u_idTrim.length < 9 || u_idTrim.length > 9 || !(u_idTrim.charAt(0) === 'U') || (!checkAlphabet.test(u_idTrim.charAt(8))) || !checkDigit.test(u_idTrim.substr(1,7))) {\r\n            this.setState({ isValid: { value: true, text: 'Please enter valid Student/Faculty ID', name: 'u_id' } });\r\n            return;\r\n        }\r\n\r\n        await this.setState({ isLoading: true });\r\n        axios.post(`${config.prod}/api/verify/identity`, { u_id: u_idTrim, id: this.props.user.id, role: status ? 'user' : 'faculty' })\r\n            .then(async (response) => {\r\n                this.createNotification('success', 'Identity Verified Successfully');\r\n                await localStorage.setItem('lms-token', response.data.token);\r\n                await this.props.signIn(response.data.user);\r\n                await this.setState({ isLoading: false });\r\n                response.data.user.role === 'user' ? this.props.history.push('/interests') : this.props.history.push('/home');\r\n            })\r\n            .catch(err => {\r\n                console.log('Error: ', err.response);\r\n                this.setState({ isLoading: false });\r\n                if (err.response && err.response.status && ( err.response.status === 409 || err.response.status === 400 || err.response.status === 500)) {\r\n                    this.setState({ isValid: { value: true, text: err.response.data.msg } });\r\n                    this.createNotification('error', err.response.data.msg);\r\n                } else {\r\n                    this.setState({ isValid: { value: true, text: 'Unknown Error' } });\r\n                    this.createNotification('error', 'Unknown Error');\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                {this.state.isLoading && <Loader />}\r\n\t            <Row>\r\n                    <NotificationContainer/>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\"> Verify Your Identity </Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                   <b>Note: </b> Your'e seeing this page because your identity is not verified.<br />\r\n                                   Please verify your Identity to proceed in the LMS.\r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Form className=\"col-md-12\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                                    <fieldset disabled={this.state.isLoading} className={this.state.isLoading ? 'opacity-5' : ''}>\r\n                                        <Form.Row>\r\n                                        <Col md={4} lg={5}>\r\n                                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Student/Faculty ID</Form.Label>\r\n                                                <Form.Control \r\n                                                    type=\"text\" \r\n                                                    name=\"u_id\" \r\n                                                    placeholder=\"Your Student/Faculty ID\" \r\n                                                    value={this.state.u_id}\r\n                                                    className={this.state.isValid.value && this.state.isValid.name === 'u_id' ? 'in-valid-input' : ''}\r\n                                                    onFocus={() => this.setState({ isValid: { value: false, text: ''}})}\r\n                                                    onChange={(e) => this.handleTextChange(e.target.value) }\r\n                                                />\r\n                                                {\r\n                                                    this.state.isValid.value && this.state.isValid.name === 'u_id' ?\r\n                                                    <Form.Text style={{ color: 'red' }}>\r\n                                                        { this.state.isValid.text }\r\n                                                    </Form.Text> : ''\r\n                                                }\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={4} lg={3}>\r\n                                            <Form.Group className=\"mb-2\" controlId=\"status\">\r\n                                                <div> <Form.Label>Type</Form.Label> </div>\r\n                                                <div className=\"rg-pad\">\r\n                                                    <Form.Check\r\n                                                        inline\r\n                                                        custom\r\n                                                        type=\"radio\"\r\n                                                        checked={this.state.status}\r\n                                                        onChange={() => this.setState({ status: true })}\r\n                                                        label=\"Student\"\r\n                                                        name=\"student\"\r\n                                                        id=\"supportedRadio21\"\r\n                                                    />\r\n                                                    <Form.Check\r\n                                                        inline\r\n                                                        custom\r\n                                                        type=\"radio\"\r\n                                                        label=\"Faculty\"\r\n                                                        checked={!this.state.status}\r\n                                                        onChange={() => this.setState({ status: false })}\r\n                                                        name=\"faculty\"\r\n                                                        id=\"supportedRadio22\"\r\n                                                    />\r\n                                                </div>\r\n                                                \r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={4} lg={4}>\r\n                                            <div style={{ padding: '4px 20px' }}>\r\n                                                <Button type=\"submit\" className=\"mt-4\" variant={\"primary\"}>\r\n                                                    { 'Submit' }\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Col>\r\n                                        </Form.Row>\r\n                                    </fieldset>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userDetails.user,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(VerifyIdentity);\r\n"],"sourceRoot":""}