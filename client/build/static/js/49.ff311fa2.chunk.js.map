{"version":3,"sources":["Demo/Faculty/Annoucements/ListAnnoucement.js"],"names":["ListAnnoucement","props","componentDidMount","a","user","id","match","params","setState","class_id","getAnnoucementList","createNotification","type","value","NotificationManager","info","success","warning","error","state","isLoading","deletedRowId","showModal","handleCloseModal","isValid","text","data","title","this","axios","delete","config","prod","annoucement_id","then","response","name","catch","err","console","log","get","isEdit","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","handleDelete","cancelDelete","as","map","elem","i","key","e","openDeleteModal","style","float","description","React","Component","connect","userDetails"],"mappings":"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","file":"static/js/49.ff311fa2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button, Modal } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport axios from 'axios';\r\nimport config from '../../../config';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Loader from '../../../App/layout/Loader';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ListAnnoucement extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n\t\t\tdeletedRowId: null,\r\n\t\t\tshowModal: false,\r\n\t\t\thandleCloseModal: false,\r\n            isValid: {\r\n                value: false,\r\n                text: ''   \r\n            },\r\n            data: [],\r\n            class_id: '',\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    openDeleteModal(value) {\r\n\t\tthis.setState({ title: value.title, showModal: true, deletedRowId: value.id });\r\n    }\r\n    \r\n\tcloseDeleteModal() {\r\n\t\tthis.setState({ showModal: false });\r\n    }\r\n    \r\n    handleDelete() {\r\n        this.setState({ showModal: false, isLoading: true });\r\n\t\taxios.delete(`${config.prod}/api/annoucement/delete`, { data: { annoucement_id: this.state.deletedRowId } })\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.createNotification('success', 'Annoucement Deleted Successfully');\r\n\t\t\t\tthis.getAnnoucementList();\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false, name: '' });\r\n\t\t\t\tconsole.log('Error: deleting data from db ', err.response);\r\n                this.createNotification('error', 'Error while deleting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props && this.props.user && this.props.user.id && this.props.match && this.props.match.params && this.props.match.params.id) {\r\n            await this.setState({ class_id: this.props.match.params.id })\r\n            this.getAnnoucementList();\r\n        }\r\n    }\r\n    \r\n    getAnnoucementList() {\r\n        this.setState({ isLoading: true });\r\n\t\taxios.get(`${config.prod}/api/annoucement/${this.state.class_id}/list`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({ data: response.data.data, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error: getting data from db ', err.response);\r\n                this.createNotification('error', 'Error while Getting data from db');\r\n\t\t\t});\r\n    }\r\n\r\n    createNotification = (type, value) => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(value,'', 5000);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(value, '', 5000);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(value, '', 5000);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(value, '', 5000);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    cancelDelete() {\r\n\t\tthis.setState({ \r\n            isEdit: false,\r\n            showModal: false,\r\n\t\t\tname: ''\r\n\t\t});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Aux>\r\n                {this.state.isLoading && <Loader />}\r\n\t\t\t    <Row>\r\n                    {this.state.showModal && \r\n                        <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Delete Confirm</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure to want to delete <b>{this.state.title}</b>?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"primary\" onClick={() => this.handleDelete()}>\r\n                                    OK\r\n                                </Button>\r\n                                <Button variant=\"secondary\" onClick={() => this.cancelDelete()}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    }\r\n                    <NotificationContainer/>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Annoucements List</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        {\r\n                                            this.state.data.map((elem, i) => (\r\n                                                <Col key={elem.id}>\r\n                                                    <Card>\r\n                                                        <Card.Header><b># {i+1}: {elem.title}</b><Button onClick={(e) => this.openDeleteModal(elem)} variant='danger' style={{ float: 'right' }}>Delete</Button></Card.Header>\r\n                                                        <Card.Body>\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <h5>Description</h5>\r\n                                                                    <hr />\r\n                                                                    <p>\r\n                                                                        {elem.description}\r\n                                                                    </p>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            ))\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userDetails.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ListAnnoucement);\r\n"],"sourceRoot":""}